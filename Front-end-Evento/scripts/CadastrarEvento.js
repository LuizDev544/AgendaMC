document.getElementById("formCadastro").addEventListener("submit", async (e) => {
Â  e.preventDefault();

Â  const msgElement = document.getElementById("msg");

Â  try {
Â  Â  const nomeEvento = document.getElementById("nomeEvento").value;
Â  Â  const descricaoDoEvento = document.getElementById("descricaoDoEvento").value;
Â  Â  const dataDoEvento = document.getElementById("dataDoEvento").value;
Â  Â  const localDoEvento = document.getElementById("localDoEvento").value;
Â  Â  const precoDoEvento = Number(document.getElementById("precoDoEvento").value);
Â  Â  const capacidadeDePessoasNoEvento = Number(document.getElementById("capacidadeDePessoasNoEvento").value);
Â  Â  const tipoDoEvento = document.getElementById("tipoDoEvento").value;
Â  Â  const apresentadorDoEvento = document.getElementById("apresentadorDoEvento").value;
Â  Â  const duracaoDoEvento = document.getElementById("duracaoDoEvento").value;


Â  Â  if (isNaN(precoDoEvento) || isNaN(capacidadeDePessoasNoEvento)) {
Â  Â  Â  msgElement.innerText = "Erro: PreÃ§o e Capacidade devem ser nÃºmeros vÃ¡lidos.";
Â  Â  Â  return;
Â  Â  }
    
Â  Â  // ðŸš¨ CORREÃ‡ÃƒO IMPLEMENTADA: Removemos a autenticaÃ§Ã£o Basic desnecessÃ¡ria.
Â  Â  const response = await fetch("http://localhost:8080/api/admin/eventos", {
Â  Â  Â  Â  method: "POST",
Â  Â  Â  Â  headers: {
Â  Â  Â  Â  Â  Â  "Content-Type": "application/json",
Â  Â  Â  Â  Â  Â  // O header Authorization foi removido, confiando no cookie JSESSIONID.
Â  Â  Â  Â  },
Â  Â  Â  Â  credentials: "include", // âœ… O NAVEGADOR DEVE ENVIAR O COOKIE AGORA COM SameSite=Lax
Â  Â  Â  Â  body: JSON.stringify({
Â  Â  Â  Â  Â  Â  nomeEvento,
Â  Â  Â  Â  Â  Â  descricaoDoEvento,
Â  Â  Â  Â  Â  Â  dataDoEvento,
Â  Â  Â  Â  Â  Â  localDoEvento,
Â  Â  Â  Â  Â  Â  precoDoEvento,
Â  Â  Â  Â  Â  Â  capacidadeDePessoasNoEvento,
Â  Â  Â  Â  Â  Â  tipoDoEvento,
Â  Â  Â  Â  Â  Â  apresentadorDoEvento,
Â  Â  Â  Â  Â  Â  duracaoDoEvento
Â  Â  Â  Â  })
Â  Â  });

Â  Â  if (response.ok) {
Â  Â  Â  msgElement.innerText = "Evento cadastrado com sucesso!";
Â  Â  Â  document.getElementById("formCadastro").reset();
Â  Â  } else {

Â  Â  Â  let errorMessage = "Erro ao cadastrar evento!";

Â  Â  Â  const contentType = response.headers.get("content-type");
Â  Â  Â  if (contentType && contentType.includes("application/json")) {
Â  Â  Â  Â  const errorData = await response.json();
Â  Â  Â  Â  errorMessage = errorData.message || JSON.stringify(errorData);
Â  Â  Â  } else if (response.status === 403) {
Â  Â  Â  Â  errorMessage = "Acesso Negado. Verifique sua permissÃ£o de ADMIN. (403)";
Â  Â  Â  } else if (response.status === 401) { 
Â  Â  Â  Â  errorMessage = "SessÃ£o expirada ou usuÃ¡rio nÃ£o logado. Por favor, faÃ§a login novamente. (401)";
Â  Â  Â  } else if (response.status === 400) {
Â  Â  Â  Â  errorMessage = "Dados InvÃ¡lidos. Verifique se todos os campos estÃ£o preenchidos corretamente. (400)";
Â  Â  Â  }

Â  Â  Â  msgElement.innerText = `Erro (${response.status}): ${errorMessage}`;
Â  Â  }
Â  } catch (error) {
Â  Â  console.error("Erro na requisiÃ§Ã£o ou processamento:", error);
Â  Â  msgElement.innerText = "Falha de conexÃ£o. Verifique se o servidor estÃ¡ ativo.";
Â  }
});